upstream zoowatch {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).
 
  server unix:/tmp/zoowatch.sock fail_timeout=0;
}
 
server {
 
    listen   8000;
    #server_name xiyi.local.com;
 
    client_max_body_size 1G;
 
    access_log /tmp/zoowatch_nginx_access.log;
    error_log /tmp/zoowatch_nginx_error.log;

    server_tokens off;

    location /static/ {
        alias /home/bwhite/mygit/known/projects/zoowatch/static;
    }
    
    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'OPTIONS, POST, GET';
        add_header 'Access-Control-Allow-Headers' 'X-Requested-With, Content-Type, accept, token, access-control-allow-origin';    

        if (!-f $request_filename) {
            proxy_pass http://zoowatch;
            break;
        }
    }
 
}
