# -*- coding=utf-8 -*-
"""
Django settings for wedor_xiyi project.

Generated by 'django-admin startproject' using Django 1.9b1.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""

import os
import psycopg2.extensions

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

ADMINS = (
    # ('libobo', '707295770@qq.com'),
    ('bwhite', 'b__white@163.com'),
)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'j8vx=&rxwwv%79hr^&ef*$r#u^35^g8ghd=j5lyywrqbzc4eor'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'user.apps.UserConfig',
    'wash.apps.WashConfig',
    'juris.apps.JurisConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE_CLASSES = [
    #'middleware.handle_exception.HandleExceptionMiddleware',
    'middleware.options.OptionsHandleMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'middleware.token_auth.TokenAuthMiddleware',
    'middleware.error_message_midd.AddErrMsgMiddleware',
]

ROOT_URLCONF = 'wedor_xiyi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wedor_xiyi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/dev/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'wedor_xiyi',
        'USER': 'wedor_xiyi',
        'PASSWORD': 'postgresql__8856903',
        #'HOST': 'rds91v5062274mlo65jko.pg.rds.aliyuncs.com',
        #'HOST': 'rds91v5062274mlo65jk.pg.rds.aliyuncs.com',
        #'PORT': '3433',
        'HOST': '127.0.0.1',
        'PORT': '5432',
        # 'ATOMIC_REQUESTS': True,
        'OPTIONS': {
            'isolation_level': psycopg2.extensions.ISOLATION_LEVEL_SERIALIZABLE,
            'client_encoding': 'UTF8',
            # 'default_transaction_isolation': 'read committed',
        }
    },
    'user': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'wedor_user',
        'USER': 'wedor_user',
        'PASSWORD': 'postgresql__8856903',
        #'HOST': 'rds91v5062274mlo65jko.pg.rds.aliyuncs.com',
        #'HOST': 'rds91v5062274mlo65jk.pg.rds.aliyuncs.com',
        #'PORT': '3433',
        'HOST': '127.0.0.1',
        'PORT': '5432',
        # 'ATOMIC_REQUESTS': True,
        'OPTIONS': {
            'isolation_level': psycopg2.extensions.ISOLATION_LEVEL_SERIALIZABLE,
            'client_encoding': 'UTF8',
            # 'default_transaction_isolation': 'read committed',
        }
    }
}

#DATABASE_ROUTERS = ['wash.dbrouter.UserRouter']
AUTH_USER_MODEL = 'user.User'

# Password validation
# https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/dev/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

#USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/dev/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = '/var/www/api/wedor_xiyi/wedor_xiyi/static/'

# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error when DEBUG=False.
# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_false': {  # 当 debug 为 False 的是否 信息才能通过
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/var/www/api/wedor_xiyi/logs/gunicorn_supervisor.log',
        },
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler',
            # 'include_html': True,
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['file', 'console', 'mail_admins'],
            'level': 'INFO',
            'propagate': True,
        },
        'django': {
            'handlers': ['console', 'file'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'DEBUG'),
        },
    },
}

# ============= EMAIL ==============
SERVER_EMAIL = 'wawa__huahua@163.com'
# Default: 'django.core.mail.backends.smtp.EmailBackend'
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# Default: 'localhost'
EMAIL_HOST = 'smtp.163.com'
# EMAIL_HOST = 'smtp.exmail.qq.com'
EMAIL_HOST_USER = 'wawa__huahua@163.com'
EMAIL_HOST_PASSWORD = 'wawa'
EMAIL_PORT = 465
DEFAULT_FROM_EMAIL = SERVER_EMAIL
EMAIL_SUBJECT_PREFIX = '[wedor_xiyi] '
#EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
#EMAIL_SSL_CERTFILE = None
#EMAIL_SSL_KEYFILE = None
#EMAIL_TIMEOUT = 1800

# TOKEN 配置
JWT_SECRET = '55c808909dd4e45ed22382ba'
JWT_ALGORITHM = 'HS256'
JWT_EXP = 10000000
JWT_OPTIONS = {
   'verify_signature': True,
   'verify_exp': True,
   'verify_nbf': False,
   'verify_iat': False,
   'verify_aud': False,
   'require_exp': False,
   'require_iat': False,
   'require_nbf': False
}

# 当前 api 版本
API_VERSION = '0.1'

# 保价率
INSURED_PERCENT = 0.05

# 水洗码峰值
WASHING_CODE_TOP = 99



