<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--spring 的配置， spring 上下文-->

    <!--变量占位-->
    <bean id="propertyConfigure" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <!--忽略不能处理的占位-->
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <!--从哪里取配置文件-->
        <property name="locations">
            <list>
                <value>classpath:settings.properties</value>
            </list>
        </property>
    </bean>

    <!--通过dataSource 知道如何连接数据库-->
    <!--sqlSessionFactory 指定了sql是放在哪里的，相当于 sqlSessionFactory 知道sql在哪也知道如何连接数据库-->
    <!--MapperScannerConfigurer spring 启动时首先加载的类，加载之前定义的各种数据库信息，知道如何操作 dao， model 等-->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
        <!--<property name="driverClassName" value="${db.driverClassName}" />-->
        <!--<property name="url" value="${db.url}" />-->
        <!--<property name="username" value="${db.username}" />-->
        <!--<property name="password" value="${db.password}" />-->

        <!--<property name="initialSize" value="3" />-->
        <!--&lt;!&ndash;最小空余数量&ndash;&gt;-->
        <!--<property name="minIdle" value="3" />-->
        <!--&lt;!&ndash;最大活跃数量&ndash;&gt;-->
        <!--<property name="maxActive" value="20" />-->
        <!--&lt;!&ndash;最长等待时间&ndash;&gt;-->
        <!--<property name="maxWait" value="60000" />-->

        <!--&lt;!&ndash;<property name="filters" value="stat,wall" />&ndash;&gt;-->
    <!--</bean>-->

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${db.driverClassName}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <property name="initialSize" value="3" />
        <property name="minIdle" value="3" />
        <property name="maxActive" value="20" />
        <property name="maxWait" value="60000" />
        <!--<property name="filters" value="stat,wall" />-->
    </bean>

    <!--session-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置文件的地址-->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="dataSource" ref="dataSource" />
        <!--<property name="mapperLocations" value="classpath:mapper/*.xml" />-->
    </bean>

    <!--&lt;!&ndash;mapper 扫描&ndash;&gt;-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mmall.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <!--tx-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <!--&lt;!&ndash;druid&ndash;&gt;-->
    <!--<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">-->
        <!--<property name="slowSqlMillis" value="3000" />-->
        <!--<property name="logSlowSql" value="true" />-->
        <!--<property name="mergeSql" value="true" />-->
    <!--</bean>-->
    <!--<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">-->
        <!--<property name="dbType" value="mysql" />-->
    <!--</bean>-->


</beans>