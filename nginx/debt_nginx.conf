upstream debt_server {

    # Nginx 向后端服务器分配请求任务的方式，默认为轮训

    # 如果指定了 ip_hash 就是 hash 算法
    # ip_hash

    server unix:/tmp/debt.sock fail_timeout=0;

    # 后端服务器 ip:port, 如果有多个服务节点，这里就配置多个
    # backup 表示，这是一个备份节点，只有当所有节点失效后 Nginx 才会往这个节点分配请求任务
    # server 127.0.0.1:8000;

    # weight, 固定权重，加权轮训方式
    # server 127.0.0.1:8001 weight=100;
}
 
server {

    server_name quieter.me;
 
    client_max_body_size 128M;
 
    access_log /tmp/debt-nginx-access.log;
    error_log /tmp/debt-nginx-error.log;

    keepalive_timeout 70;
    
    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'OPTION, POST, GET';
        add_header 'Access-Control-Allow-Headers' 'X-Requested-With, Content-Type, token';
 
        if (!-f $request_filename) {
            proxy_pass http://debt_server;
            break;
        }
    }

    location /file {
        internal;
        alias   /home/bwhite/work/debt/static/file;
        add_header Content-Disposition "attachment; filename=$arg_renameto";
    }
}
